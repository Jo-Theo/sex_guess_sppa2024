Nb_na = .x %>%
pull(F_in) %>%
is.na() %>%
sum(),
Prop_na = .x %>%
pull(F_in) %>%
is.na() %>%
mean() %>%
round(3)
))
test <- behaviours %>%
filter(Session ==  unique(Session)[4])
View(behaviours)
View(test)
test <- behaviours %>%
filter(Session ==  unique(Session)[4]) %>%
pull(F_in) %>%
as.character() %>%
replace_na("NA")
test <- behaviours %>%
filter(Session ==  unique(Session)[4]) %>%
pull(F_in) # %>%
# as.character() %>%
# replace_na("NA")
test
which(is.na(test))
na_pos <- which(is.na(test))
na_pos <- c(0,which(is.na(test)), length(test)+1)
na_pos
na_pos[-1]
na_pos[-length(na_pos)]
na_pos[-1]
map2(na_pos[-1],
na_pos[-length(na_pos)],
~.x:.y)
map2(na_pos[-1],
na_pos[-length(na_pos)],
~(.x-1):(.y+1))
map2(na_pos[-1],
na_pos[-length(na_pos)],
~(.x-1):(.y+1))
map2(na_pos[-1],
na_pos[-length(na_pos)],
~(.y+1):(.x-1))
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NULL)
}else{
return(between)
}
}
})
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NA)
}
}
return(between)
})
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NULL)
}
}
return(between)
})
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NULL)
}
}
return(between)
}) %>%
compact()
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NULL)
}
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~c(id_minisession = .y,row = .x))
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1){
if(between[1] > between[2]){
return(NULL)
}
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
na_pos <- c(0,which(is.na(test)), length(test)+1)
map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1 && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
test[row]
mini_session <-map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>1 && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
test[minisession$row]
test[mini_session$row]
.mini_session_indiv_bouting <- function(behaviours, length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
female_activity <- behaviours$F_in
na_pos <- c(0,which(is.na(female_activity)), length(female_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y,thresh = length_min){
between <- (y+1):(x-1)
if(length(between)>thresh && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
}
.mini_session_indiv_bouting <- function(behaviours, length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
female_activity <- behaviours$F_in
na_pos <- c(0,which(is.na(female_activity)), length(female_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y,thresh = length_min){
between <- (y+1):(x-1)
if(length(between)>thresh && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
test <- behaviours %>%
filter(Session ==  unique(Session)[4])
.mini_session_indiv_bouting(test)
.mini_session <- function(behaviours, bird_female = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_female){behaviours$F_in}else{behaviours$M_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y,thresh = length_min){
between <- (y+1):(x-1)
if(length(between)>thresh && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
test <- behaviours %>%
filter(Session ==  unique(Session)[4])
.mini_session(test)
.mini_session(test,F)
.mini_session(test,F,2)
.mini_session(test,F,2)
.mini_session(test,F,4)
.mini_session(test,F)
.mini_session <- function(behaviours, bird_female = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_female){behaviours$F_in}else{behaviours$M_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)>length_min && between[1] > between[2]){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
.mini_session(test,F)
.mini_session(test,F,2)
.mini_session <- function(behaviours, bird_female = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_female){behaviours$F_in}else{behaviours$M_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
.mini_session(test,F,2)
.mini_session <- function(behaviours, bird_male = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_female){behaviours$F_in}else{behaviours$M_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
.mini_session(test,F)
.mini_session <- function(behaviours, bird_male = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_male){behaviours$M_in}else{behaviours$F_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
mini_session
}
.mini_session(test,F)
1:24 == mini_session$row
rep(NA,dim(mini_session))
rep(NA,dim(test)[1])
1:24 %>%
map_int(~if(.x %in% mini_session$row){
return(mini_session$id_minisession[which(mini_session$row == .x)])
}else{
return(NA)
})
.mini_session(test)
.mini_session <- function(behaviours, bird_male = T , length_min = 1){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_male){behaviours$M_in}else{behaviours$F_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
behaviours %>%
mutate(mini_session = 1:dim(.)[1] %>%
map_int(~if(.x %in% mini_session$row){
return(mini_session$id_minisession[which(mini_session$row == .x)])
}else{
return(NA)
}))
}
.mini_session(test)
.mini_session <- function(behaviours, length_min = 1, bird_male = T ){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_male){behaviours$M_in}else{behaviours$F_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
behaviours %>%
mutate(mini_session = 1:dim(.)[1] %>%
map_int(~if(.x %in% mini_session$row){
return(mini_session$id_minisession[which(mini_session$row == .x)])
}else{
return(NA)
}))
}
.mini_session(test)
.mini_session(test,2)
.mini_session(test,1) %>%
split(.$mini_session)
.mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min)) %>% # Bout each of them
mutate(mini_session = paste(Session,'_',mini_session))%>%
mutate(Session = factor(Session,session_order)) %>% # reorder
arrange(Session)
}
.mini_session <- function(behaviours, length_min,
bird_male = T ){
if(length_min<0){
stop('length_min is a positive or null integer')
}
#Femelle/puis male
bird_activity <- if(bird_male){behaviours$M_in}else{behaviours$F_in}
na_pos <- c(0,which(is.na(bird_activity)), length(bird_activity)+1)
mini_session <- map2(na_pos[-1],
na_pos[-length(na_pos)],
function(x,y){
between <- (y+1):(x-1)
if(length(between)<length_min | (length(between)>1 && between[1] > between[2])){
return(NULL)
}
return(between)
}) %>%
compact() %>%
map2_dfr(1:length(.),
~data.frame(id_minisession = .y,row = .x))
behaviours %>%
mutate(Mini_session = 1:dim(.)[1] %>%
map_int(~if(.x %in% mini_session$row){
return(mini_session$id_minisession[which(mini_session$row == .x)])
}else{
return(NA)
}))
}
mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min)) %>% # Bout each of them
mutate(Mini_session = paste(Session,'_',mini_session))%>%
mutate(Session = factor(Session,session_order)) %>% # reorder
arrange(Session)
}
mini_session_by_session(behaviours)
mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min))# %>% # Bout each of them
# mutate(Mini_session = paste(Session,'_',mini_session))%>%
# mutate(Session = factor(Session,session_order)) %>% # reorder
# arrange(Session)
}
mini_session_by_session(behaviours)
test <-mini_session_by_session(behaviours)
paste(test$Session,'_',test$Mini_session)
paste0(test$Session,'_',test$Mini_session)
mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min)) %>% # Bout each of them
mutate(Mini_session = paste0(Session,'_',Mini_session))%>%
mutate(Session = factor(Session,session_order)) %>% # reorder
arrange(Session)
}
mini_session_by_session(behaviours)
test <-mini_session_by_session(behaviours)
View(test)
mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min)) %>% # Bout each of them
mutate(Mini_session = ifelse(is.na(Mini_session),NA,
paste0(Session,'_',Mini_session)))%>%
mutate(Session = factor(Session,session_order)) %>% # reorder
arrange(Session)
}
test <-mini_session_by_session(behaviours)
# .rs.restartR()
# rm(list = ls(all.names = T))
##############################
### Packages and functions ###
##############################
source("jo_dev/dev/preprossesing_functions.R")
###################
### Import data ###
###################
behaviours <- read.csv("01_cleaning/input/Building.csv",
colClasses = "character", na.strings = "",
stringsAsFactors = FALSE)
View(behaviours)
# .rs.restartR()
rm(list = ls(all.names = T))
source("jo_dev/dev/bout_manipulation.R")
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
mini_session_by_session(behaviours, length_min = 1)
.rs.restartR()
source("jo_dev/dev/bout_manipulation.R")
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
mini_session_by_session(behaviours, length_min = 1)
# wrapper by session
mini_session_by_session <- function(behaviours, length_min = 1){
session_order <- unique(behaviours$Session)
behaviours %>%
split(.$Session) %>% # Make a list of data.frame each df is one session
map_dfr(~.mini_session(.x,length_min)) %>% # Bout each of them
mutate(Mini_session = ifelse(is.na(Mini_session),NA,
paste0(Session,'_',Mini_session)))%>%
mutate(Session = factor(Session,session_order)) %>% # reorder
arrange(Session) %>%
relocate(Mini_session, .after = Session )
}
# .rs.restartR()
rm(list = ls(all.names = T))
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
source("jo_dev/dev/bout_manipulation.R")
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
mini_session_by_session(behaviours, length_min = 1)
mini_behaviours <- mini_session_by_session(behaviours, length_min = 1)
View(mini_behaviours)
# .rs.restartR()
rm(list = ls(all.names = T))
source("jo_dev/dev/bout_manipulation.R")
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
mini_behaviours <- mini_session_by_session(behaviours, length_min = 1)
mini_behaviours <- sub_session_by_session(behaviours, length_min = 1)
source("jo_dev/dev/bout_manipulation.R")
behaviours <- read.csv2("Jo_dev/Data/bouted_behaviours_SPPA2024_1.csv")
mini_behaviours <- sub_session_by_session(behaviours, length_min = 1)
View(mini_behaviours)
